/*
//######################################################################################################
//					(c) Copyright Chris_Shang
//                        All Rights Reserved
//
// FILE:	UTL_EEPROM.c
//
// TITLE:	EEPROM operation process, used for system parameter storage.
//
// AUTHOR:	CHRIS_SHANG
//
// DATE:	2014-11-13
//
// Description:
//

//------------------------------------------------------------------------------------------------------
// Created by: 		Chris_Shang
// Created date:   	2014-11-13
// Version:
// Descriptions: 	Frist Version
//
//------------------------------------------------------------------------------------------------------
// Modified by: 		
// Modified date:		
// Version:				
// Descriptions: 		 
//
//------------------------------------------------------------------------------------------------------
//######################################################################################################
*/


/*
********************************************************************************************************
********************************************************************************************************
*/

#if !defined(UTL_EEPROM_H_)
#define UTL_EEPROM_H_

/*
********************************************************************************************************
*	Predefine
********************************************************************************************************
*/
#ifdef   UTL_EEPROM_GLOBAL_
#define  UTL_EEPROM_EXT
#else    
#define  UTL_EEPROM_EXT  extern
#endif


/*
********************************************************************************************************
*	Add include files
********************************************************************************************************
*/
#include "BSP_BasicDataType.h"			// Basic data type define.

/*
********************************************************************************************************
*	 Macro Defines
********************************************************************************************************
*/


/*
********************************************************************************************************
*	 Const Defines
********************************************************************************************************
*/

/*
********************************************************************************************************
*	 Global data type
********************************************************************************************************
*/
/* EEPROM Parameter handler */
typedef enum tagEEPROM_PARAM		// EEPROM parameter.
{
	EEPROM_PARAM_VERSION = 0,
	EEPROM_PARAM_SLAVE_ID,
	EEPROM_PARAM_X_ORIG_OFFSET,
	EEPROM_PARAM_Y_ORIG_OFFSET,
	EEPROM_PARAM_Z_ORIG_OFFSET,
	EEPROM_PARAM_X_MAX_SPD,
//	EEPROM_PARAM_Y_MAX_SPD,
//	EEPROM_PARAM_X_ACC,
//	EEPROM_PARAM_Y_ACC,
//	EEPROM_PARAM_SWITCH_PERIOD,
//	EEPROM_PARAM_TEST_SERIAL,
	EEPROM_PARAM_MAX
}EEPROM_PARAM;


/*
********************************************************************************************************
*	 Global variables
********************************************************************************************************
*/


/*
********************************************************************************************************
*	 Externals
********************************************************************************************************
*/

/*
*********************************************************************************************************
*    Local function prototypes
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*    Program Start 
*********************************************************************************************************
*/
UTL_EEPROM_EXT VOID InitEEPROM(VOID);

UTL_EEPROM_EXT BOOL EEPROMReadBuffer(UINT8* pBuffer, UINT16 readAddr, UINT16 NumByteToRead);

UTL_EEPROM_EXT BOOL EEPROMWriteBuffer(UINT8* pBuffer, UINT16 WriteAddr, UINT16 NumByteToWrite);

UTL_EEPROM_EXT BOOL EEPROMSaveParam(UINT16 paramId);

UTL_EEPROM_EXT BOOL EEPROMSaveAllParam(VOID);

UTL_EEPROM_EXT BOOL EEPROMReadParam(UINT16 paramId);

UTL_EEPROM_EXT BOOL EEPROMReadAllParam(VOID);

UTL_EEPROM_EXT BOOL EEPROMInitParam(VOID);

UTL_EEPROM_EXT VOID Task_EEPROM(void* p_arg);

#endif	//#if !defined(XXX_H_)
/*
*********************************************************************************************************
*                                           End of file 
*********************************************************************************************************
*/

