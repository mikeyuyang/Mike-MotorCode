/*
//######################################################################################################
//										(c) Copyright Chris_Shang
//                        All Rights Reserved
//
// FILE:	COM_HDProtocol1.c
//
// TITLE:	This function realized the HengDa standerd communication protocol1.
//
// AUTHOR:	CHRIS_SHANG
//
// DATE:	Nov 3,2018
//
// Description: HengDa standerd communication protocol realization.
//

//------------------------------------------------------------------------------------------------------
// Created by: 		
// Created date:   	Nov 3,2018
// Version:
// Descriptions: 	First Version
//
//------------------------------------------------------------------------------------------------------
// Modified by: 		
// Modified date:		
// Version:				
// Descriptions: 		 
//
//------------------------------------------------------------------------------------------------------
//######################################################################################################
*/


/*
********************************************************************************************************
********************************************************************************************************
*/

#if !defined(COM_HD_PROTOCOL_1_H_)
#define COM_HD_PROTOCOL_1_H_

/*
********************************************************************************************************
*	Predefine
********************************************************************************************************
*/
#ifdef		COM_HD_PROTOCOL_1_GLOBAL_
#define		COM_HD_PROTOCOL_1_EXT
#else    
#define		COM_HD_PROTOCOL_1_EXT  extern
#endif


/*
********************************************************************************************************
*	Add include files
********************************************************************************************************
*/
#include "BSP_BasicDataType.h"			// Basic data type define.
#include "UTL_USART.h"

/*
********************************************************************************************************
*	 Macro Defines
********************************************************************************************************
*/


/*
********************************************************************************************************
*	 Const Defines
********************************************************************************************************
*/


/*
********************************************************************************************************
*	 Global data type
********************************************************************************************************
*/

/* HD request frame define */
typedef struct tagHD1_REQ_FRAME
{
  UINT8		m_Head[2];
  UINT8		m_Len[2];
  UINT8		m_SenorType;
  UINT8		m_SenorAddress;
  UINT8		m_FrameType;
  UINT8		m_FunctionType;	
  UINT8		m_ChkSum;
}JZ_REQ_FRAME;

/* HD answer format define */
typedef struct tagHD1_ANS_FRAME
{
	UINT8		m_Head[2];
	UINT8		m_Len[2];
	UINT8		m_SenorType;
	UINT8		m_SenorAddress;
	UINT8		m_FrameType;
	UINT8		m_FunctionType;	
	UINT8		m_SenorDataX[4];	
	UINT8		m_SenorDataY[4];	
	UINT8		m_ChkSum;
}JZ_ANS_FRAME;

typedef struct
{
	 float X_Data;
	 float Y_Data;
	
}CompassData;



/*
********************************************************************************************************
*	 Global variables
********************************************************************************************************
*/
COM_HD_PROTOCOL_1_EXT JZ_REQ_FRAME g_JZReqFrame[SERIAL_PORT_MAX];
COM_HD_PROTOCOL_1_EXT JZ_ANS_FRAME g_JZAnsFrame[SERIAL_PORT_MAX];
CompassData Compass;
CompassData *CompassMsg = &Compass;


/*
********************************************************************************************************
*	 Externals
********************************************************************************************************
*/

/*
*********************************************************************************************************
*    Local function prototypes
*********************************************************************************************************
*/

VOID JZActSend(SERIAL_PORT port);
BOOL ProcessJZProtocol1Frame(JZ_REQ_FRAME* pReq, JZ_ANS_FRAME* pAns);



/*
*********************************************************************************************************
*    Program Start 
*********************************************************************************************************
*/


#endif	//#if !defined(XXX_H_)
/*
*********************************************************************************************************
*                                           End of file 
*********************************************************************************************************
*/


